// Code generated by easyjson for marshaling/unmarshaling. DO NOT EDIT.

package entity

import (
	json "encoding/json"
	easyjson "github.com/mailru/easyjson"
	jlexer "github.com/mailru/easyjson/jlexer"
	jwriter "github.com/mailru/easyjson/jwriter"
)

// suppress unused package warning
var (
	_ *json.RawMessage
	_ *jlexer.Lexer
	_ *jwriter.Writer
	_ easyjson.Marshaler
)

func easyjson163c17a9DecodeGithubComCantylvServiceHappyBirthdayInternalEntity(in *jlexer.Lexer, out *UserUpdate) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "full_name":
			out.FullName = string(in.String())
		case "birthday":
			out.Birthday = string(in.String())
		case "email":
			out.Email = string(in.String())
		case "password":
			out.Password = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson163c17a9EncodeGithubComCantylvServiceHappyBirthdayInternalEntity(out *jwriter.Writer, in UserUpdate) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"full_name\":"
		out.RawString(prefix[1:])
		out.String(string(in.FullName))
	}
	{
		const prefix string = ",\"birthday\":"
		out.RawString(prefix)
		out.String(string(in.Birthday))
	}
	{
		const prefix string = ",\"email\":"
		out.RawString(prefix)
		out.String(string(in.Email))
	}
	{
		const prefix string = ",\"password\":"
		out.RawString(prefix)
		out.String(string(in.Password))
	}
	out.RawByte('}')
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v UserUpdate) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson163c17a9EncodeGithubComCantylvServiceHappyBirthdayInternalEntity(w, v)
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *UserUpdate) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson163c17a9DecodeGithubComCantylvServiceHappyBirthdayInternalEntity(l, v)
}
func easyjson163c17a9DecodeGithubComCantylvServiceHappyBirthdayInternalEntity1(in *jlexer.Lexer, out *User) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "id":
			out.Id = string(in.String())
		case "full_name":
			out.FullName = string(in.String())
		case "birthday":
			out.Birthday = string(in.String())
		case "email":
			out.Email = string(in.String())
		case "password":
			out.Password = string(in.String())
		case "subs":
			if in.IsNull() {
				in.Skip()
				out.Subs = nil
			} else {
				in.Delim('[')
				if out.Subs == nil {
					if !in.IsDelim(']') {
						out.Subs = make([]Subscription, 0, 2)
					} else {
						out.Subs = []Subscription{}
					}
				} else {
					out.Subs = (out.Subs)[:0]
				}
				for !in.IsDelim(']') {
					var v1 Subscription
					(v1).UnmarshalEasyJSON(in)
					out.Subs = append(out.Subs, v1)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson163c17a9EncodeGithubComCantylvServiceHappyBirthdayInternalEntity1(out *jwriter.Writer, in User) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"id\":"
		out.RawString(prefix[1:])
		out.String(string(in.Id))
	}
	{
		const prefix string = ",\"full_name\":"
		out.RawString(prefix)
		out.String(string(in.FullName))
	}
	{
		const prefix string = ",\"birthday\":"
		out.RawString(prefix)
		out.String(string(in.Birthday))
	}
	{
		const prefix string = ",\"email\":"
		out.RawString(prefix)
		out.String(string(in.Email))
	}
	{
		const prefix string = ",\"password\":"
		out.RawString(prefix)
		out.String(string(in.Password))
	}
	{
		const prefix string = ",\"subs\":"
		out.RawString(prefix)
		if in.Subs == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v2, v3 := range in.Subs {
				if v2 > 0 {
					out.RawByte(',')
				}
				(v3).MarshalEasyJSON(out)
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v User) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson163c17a9EncodeGithubComCantylvServiceHappyBirthdayInternalEntity1(w, v)
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *User) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson163c17a9DecodeGithubComCantylvServiceHappyBirthdayInternalEntity1(l, v)
}
func easyjson163c17a9DecodeGithubComCantylvServiceHappyBirthdayInternalEntity2(in *jlexer.Lexer, out *Subscription) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "employee_id":
			out.EmployeeId = string(in.String())
		case "interval":
			out.Interval = uint16(in.Uint16())
		case "is_followed":
			out.IsFollowed = bool(in.Bool())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson163c17a9EncodeGithubComCantylvServiceHappyBirthdayInternalEntity2(out *jwriter.Writer, in Subscription) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"employee_id\":"
		out.RawString(prefix[1:])
		out.String(string(in.EmployeeId))
	}
	{
		const prefix string = ",\"interval\":"
		out.RawString(prefix)
		out.Uint16(uint16(in.Interval))
	}
	{
		const prefix string = ",\"is_followed\":"
		out.RawString(prefix)
		out.Bool(bool(in.IsFollowed))
	}
	out.RawByte('}')
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Subscription) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson163c17a9EncodeGithubComCantylvServiceHappyBirthdayInternalEntity2(w, v)
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Subscription) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson163c17a9DecodeGithubComCantylvServiceHappyBirthdayInternalEntity2(l, v)
}
func easyjson163c17a9DecodeGithubComCantylvServiceHappyBirthdayInternalEntity3(in *jlexer.Lexer, out *SubProps) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "IdFollower":
			out.IdFollower = string(in.String())
		case "IdEmployee":
			out.IdEmployee = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson163c17a9EncodeGithubComCantylvServiceHappyBirthdayInternalEntity3(out *jwriter.Writer, in SubProps) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"IdFollower\":"
		out.RawString(prefix[1:])
		out.String(string(in.IdFollower))
	}
	{
		const prefix string = ",\"IdEmployee\":"
		out.RawString(prefix)
		out.String(string(in.IdEmployee))
	}
	out.RawByte('}')
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SubProps) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson163c17a9EncodeGithubComCantylvServiceHappyBirthdayInternalEntity3(w, v)
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SubProps) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson163c17a9DecodeGithubComCantylvServiceHappyBirthdayInternalEntity3(l, v)
}
func easyjson163c17a9DecodeGithubComCantylvServiceHappyBirthdayInternalEntity4(in *jlexer.Lexer, out *SignUpForm) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "full_name":
			out.FullName = string(in.String())
		case "email":
			out.Email = string(in.String())
		case "password":
			out.Password = string(in.String())
		case "birthday":
			out.Birthday = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson163c17a9EncodeGithubComCantylvServiceHappyBirthdayInternalEntity4(out *jwriter.Writer, in SignUpForm) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"full_name\":"
		out.RawString(prefix[1:])
		out.String(string(in.FullName))
	}
	{
		const prefix string = ",\"email\":"
		out.RawString(prefix)
		out.String(string(in.Email))
	}
	{
		const prefix string = ",\"password\":"
		out.RawString(prefix)
		out.String(string(in.Password))
	}
	{
		const prefix string = ",\"birthday\":"
		out.RawString(prefix)
		out.String(string(in.Birthday))
	}
	out.RawByte('}')
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SignUpForm) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson163c17a9EncodeGithubComCantylvServiceHappyBirthdayInternalEntity4(w, v)
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SignUpForm) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson163c17a9DecodeGithubComCantylvServiceHappyBirthdayInternalEntity4(l, v)
}
func easyjson163c17a9DecodeGithubComCantylvServiceHappyBirthdayInternalEntity5(in *jlexer.Lexer, out *SignInForm) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "email":
			out.Email = string(in.String())
		case "password":
			out.Password = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson163c17a9EncodeGithubComCantylvServiceHappyBirthdayInternalEntity5(out *jwriter.Writer, in SignInForm) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"email\":"
		out.RawString(prefix[1:])
		out.String(string(in.Email))
	}
	{
		const prefix string = ",\"password\":"
		out.RawString(prefix)
		out.String(string(in.Password))
	}
	out.RawByte('}')
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SignInForm) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson163c17a9EncodeGithubComCantylvServiceHappyBirthdayInternalEntity5(w, v)
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SignInForm) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson163c17a9DecodeGithubComCantylvServiceHappyBirthdayInternalEntity5(l, v)
}
func easyjson163c17a9DecodeGithubComCantylvServiceHappyBirthdayInternalEntity6(in *jlexer.Lexer, out *SetUpIntervalProps) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "Ids":
			(out.Ids).UnmarshalEasyJSON(in)
		case "NewInterval":
			out.NewInterval = uint16(in.Uint16())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson163c17a9EncodeGithubComCantylvServiceHappyBirthdayInternalEntity6(out *jwriter.Writer, in SetUpIntervalProps) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"Ids\":"
		out.RawString(prefix[1:])
		(in.Ids).MarshalEasyJSON(out)
	}
	{
		const prefix string = ",\"NewInterval\":"
		out.RawString(prefix)
		out.Uint16(uint16(in.NewInterval))
	}
	out.RawByte('}')
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SetUpIntervalProps) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson163c17a9EncodeGithubComCantylvServiceHappyBirthdayInternalEntity6(w, v)
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SetUpIntervalProps) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson163c17a9DecodeGithubComCantylvServiceHappyBirthdayInternalEntity6(l, v)
}
func easyjson163c17a9DecodeGithubComCantylvServiceHappyBirthdayInternalEntity7(in *jlexer.Lexer, out *ResponseDetail) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "detail":
			out.Detail = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson163c17a9EncodeGithubComCantylvServiceHappyBirthdayInternalEntity7(out *jwriter.Writer, in ResponseDetail) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"detail\":"
		out.RawString(prefix[1:])
		out.String(string(in.Detail))
	}
	out.RawByte('}')
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v ResponseDetail) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson163c17a9EncodeGithubComCantylvServiceHappyBirthdayInternalEntity7(w, v)
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *ResponseDetail) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson163c17a9DecodeGithubComCantylvServiceHappyBirthdayInternalEntity7(l, v)
}
func easyjson163c17a9DecodeGithubComCantylvServiceHappyBirthdayInternalEntity8(in *jlexer.Lexer, out *JwtTokenPayload) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "id":
			out.Id = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson163c17a9EncodeGithubComCantylvServiceHappyBirthdayInternalEntity8(out *jwriter.Writer, in JwtTokenPayload) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"id\":"
		out.RawString(prefix[1:])
		out.String(string(in.Id))
	}
	out.RawByte('}')
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v JwtTokenPayload) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson163c17a9EncodeGithubComCantylvServiceHappyBirthdayInternalEntity8(w, v)
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *JwtTokenPayload) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson163c17a9DecodeGithubComCantylvServiceHappyBirthdayInternalEntity8(l, v)
}
func easyjson163c17a9DecodeGithubComCantylvServiceHappyBirthdayInternalEntity9(in *jlexer.Lexer, out *JwtTokenHeader) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "exp":
			out.Exp = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson163c17a9EncodeGithubComCantylvServiceHappyBirthdayInternalEntity9(out *jwriter.Writer, in JwtTokenHeader) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"exp\":"
		out.RawString(prefix[1:])
		out.String(string(in.Exp))
	}
	out.RawByte('}')
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v JwtTokenHeader) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson163c17a9EncodeGithubComCantylvServiceHappyBirthdayInternalEntity9(w, v)
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *JwtTokenHeader) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson163c17a9DecodeGithubComCantylvServiceHappyBirthdayInternalEntity9(l, v)
}
func easyjson163c17a9DecodeGithubComCantylvServiceHappyBirthdayInternalEntity10(in *jlexer.Lexer, out *ErrorDetail) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "error":
			out.Error = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson163c17a9EncodeGithubComCantylvServiceHappyBirthdayInternalEntity10(out *jwriter.Writer, in ErrorDetail) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"error\":"
		out.RawString(prefix[1:])
		out.String(string(in.Error))
	}
	out.RawByte('}')
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v ErrorDetail) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson163c17a9EncodeGithubComCantylvServiceHappyBirthdayInternalEntity10(w, v)
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *ErrorDetail) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson163c17a9DecodeGithubComCantylvServiceHappyBirthdayInternalEntity10(l, v)
}
